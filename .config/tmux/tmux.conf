#-------------------------------------------------------------------------------
#   TMUX CONFIG
#-------------------------------------------------------------------------------
# NOTE: this overrides specify terminal capabilities
# you are overriding within tmux this value MUST
# refer to the $TERM type of the emulator you are using
set -g default-terminal "${TERM}"
#-------------------------------------------------------------------------------
#  Undercurl in TMUX {{{1
#-------------------------------------------------------------------------------
# -> https://github.com/alacritty/alacritty/issues/1628
# References:
#   * https://github.com/neovim/neovim/pull/9097
#   * https://github.com/tmux/tmux/issues/1492
# Allow undercurls for terminals that support them.
set -as terminal-overrides ',*:Smulx=\E[4::%p1%dm'
# Allow coloured undercurls for terminals that support them.
set -as terminal-overrides ',*:Setulc=\E[58::2::%p1%{65536}%/%d::%p1%{256}%/%{255}%&%d::%p1%{255}%&%d%;m'
# }}}
#-------------------------------------------------------------------------------
#  Prefix {{{1
#-------------------------------------------------------------------------------
set-option -g prefix C-space
unbind-key C-b
bind-key C-space send-prefix

# quick pane cycling
unbind ^A
bind ^A select-pane -t :.+

# for nested tmux sessions
# bind-key a send-prefix
set -g renumber-windows on
bind a last-window

# Rather than constraining window size to the maximum size of any client
# connected to the *session*, constrain window size to the maximum size of any
# client connected to *that window*. Much more reasonable.
# super useful when using "grouped sessions" and multi-monitor setup
setw -g aggressive-resize on
set  -s escape-time 10
set  -g history-limit 100000
set  -g focus-events on
# tile all windows
unbind =
bind . select-layout tiled
bind r source-file $XDG_CONFIG_HOME/tmux/tmux.conf \; display "Reloaded!"
unbind z
bind Space resize-pane -Z
# }}}
#-------------------------------------------------------------------------------
#  Display {{{1
#-------------------------------------------------------------------------------
set-option        -g set-titles on
set-option        -g set-titles-string '❐ #S ● #I'
set-option        -g allow-rename on
set-option        -g pane-base-index 1
set-option        -g base-index 1
set-option        -g monitor-activity on
set-option        -sg repeat-time 600
set-option        -g display-time 1000
set-option        -g status-interval 5
set-window-option -g automatic-rename on
set-option        -g automatic-rename-format '#{b:pane_current_path}'
# Disable tmux statusline on zooming into a pane
# @see https://gist.github.com/bartj3/6d3bd8efd2ceaf02d443
# set-hook -g after-resize-pane "if-shell \"tmux list-panes -F '#F' | grep -q Z\" \"set -g status off\" \"set -g status on\""
# }}}
#-------------------------------------------------------------------------------
#  Navigation {{{1
#-------------------------------------------------------------------------------
set-option -g mouse on

bind C-f command-prompt -p find-session 'switch-client -t %%' #find session

bind '\' split-window -h -c "#{pane_current_path}"
bind - split-window -v -c "#{pane_current_path}"
unbind '"'
unbind %

setw -g mode-keys vi # set vi mode for copy mode
# more settings to make copy-mode more vim-like
bind Escape copy-mode
# Setup 'v' to begin selection as in Vim
if-shell -b '[[ "$OSTYPE" == "darwin"* ]]' \
        'COPY_CMD="pbcopy"' \
        'COPY_CMD="xclip -se c -i"'
unbind-key -T copy-mode-vi Enter
bind-key -T copy-mode-vi v send-keys -X begin-selection
bind-key -T copy-mode-vi y send-keys -X copy-selection
bind-key -T copy-mode-vi r send-keys -X rectangle-toggle
bind -T copy-mode-vi y send -X copy-pipe-and-cancel "#{COPY_CMD}"

# Synchronize all panes in a window
bind y setw synchronize-panes
# easier and faster switching between next/prev window
bind p previous-window
bind n next-window

# detach client
bind-key d detach
bind-key C-d detach

# Cycle to next pane
bind-key -r Tab select-pane -t :.+

# previous window
bind-key BSpace previous-window

# swap panes
bind-key -r J swap-pane -D
bind-key -r K swap-pane -U

unbind -T copy-mode-vi MouseDragEnd1Pane

# Smart pane switching with awareness of Vim splits.
is_vim="ps -o state= -o comm= -t '#{pane_tty}' | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"

bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h' { if -F '#{pane_at_left}' '' 'select-pane -L' }
bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j' { if -F '#{pane_at_bottom}' '' 'select-pane -D' }
bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k' { if -F '#{pane_at_top}' '' 'select-pane -U' }
bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l' { if -F '#{pane_at_right}' '' 'select-pane -R' }

bind-key -T copy-mode-vi 'C-h' if -F '#{pane_at_left}' '' 'select-pane -L'
bind-key -T copy-mode-vi 'C-j' if -F '#{pane_at_bottom}' '' 'select-pane -D'
bind-key -T copy-mode-vi 'C-k' if -F '#{pane_at_top}' '' 'select-pane -U'
bind-key -T copy-mode-vi 'C-l' if -F '#{pane_at_right}' '' 'select-pane -R'
# }}}
#-------------------------------------------------------------------------------
#  Status Bar {{{1
#-------------------------------------------------------------------------------
bind-key b set-option status

INACTIVE_FG_COLOR='#5c6370'
ACTIVE_FG_COLOR='#fac863'

set-option -g status on
set-option -g status-position top
set-option -g status-style fg=terminal
set-option -g status-style bg=terminal
set-option -g status-justify centre
set-option -g status-interval 1

set -g @batt_remain_short 'true'

separator="#[fg=$INACTIVE_FG_COLOR]#[terminal]"
# NOTE: these use nested conditionals and "," and "}" must be escaped
search_icon="#{?window_active,#{?window_zoomed_flag,#[fg=blue],},} "
pane_count="#{?window_active,#[fg=white#,noitalics](#{window_panes}),}"
status_items="#{?window_bell_flag,#[fg=red] ,}$pane_count $search_icon"

# see: https://github.com/tmux-plugins/tmux-battery
battery="Batt: #{battery_color_fg}#{battery_icon} #{battery_remain}#[terminal]"

ram="#[bold,italics]RAM: #{ram_fg_color}#{ram_icon}#[terminal]"

set -g status-left-length  80
set -g status-right-length 70
# Options -> ⧉ ❐
set -g status-left "#{?client_prefix,#[fg=#ffffff bg=#22252B],#[fg=#e5c07b]} ❐ #S "
# alternate date format "%a %d %b"
set -g status-right "#[fg=blue,bold,underscore]%H:%M#[nounderscore] %d/%m/%y"

set-window-option -g window-status-current-style noitalics
set-window-option -g window-status-current-format " #I. #[bold,italics]#T $status_items"

set-window-option -g window-status-style bg=terminal,fg=$INACTIVE_FG_COLOR
# NOTE: for some unknown reason this tmux section is being set to reverse from somewhere so we explictly remove it here
# TODO: consider adding window name #{=20:window_name} if #T is empty
set-window-option -g window-status-format "#[none] #I. #[italics]#T $status_items"
set-window-option -g window-status-separator $separator

# Styling when in command mode i.e. vi or emacs mode in tmux command line
set -g message-command-style fg=green,bg=terminal,bold,blink
# Regular tmux commandline styling
set -g message-style fg=yellow,bg=terminal,bold

# Set window notifications
set-option -g monitor-activity on
set-option -g visual-activity off
# }}}
#-------------------------------------------------------------------------------
#  Pane border {{{1
#-------------------------------------------------------------------------------
set-option        -g pane-active-border-style fg=colour51
set-option        -g pane-border-style fg='#343d46'
# }}}
#-------------------------------------------------------------------------------
#  Plugins {{{1
#-------------------------------------------------------------------------------
# TODO:
# - Find an alternative to kitty hints kitten in tmux
#
#-------------------------------------------------------------------------------
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sessionist'
#-------------------------------------------------------------------------------
# Saves and restores tmux sessions beyond system crashes and restarts
set -g @plugin 'tmux-plugins/tmux-resurrect'
# Auto saves tmux environment and keeps tmux running
set -g @plugin 'tmux-plugins/tmux-continuum'
set -g @continuum-restore 'on'
set -g @resurrect-strategy-nvim 'session'
#-------------------------------------------------------------------------------
set -g @plugin 'sainnhe/tmux-fzf'
#-------------------------------------------------------------------------------
# Adds better bindings for switching windows,panes & resizing
set -g @plugin 'tmux-plugins/tmux-pain-control'
set-option -g @pane_resize "10"
#-------------------------------------------------------------------------------
set -g @plugin 'tmux-plugins/tmux-battery'
set -g @plugin 'nhdaly/tmux-better-mouse-mode'
#-------------------------------------------------------------------------------
set -g @plugin 'tmux-plugins/tmux-open'
run-shell ~/.tmux/plugins/tpm/tpm
# }}}
#-----------------------------------------------------------------------------

# vim:foldmethod=marker ft=tmux
