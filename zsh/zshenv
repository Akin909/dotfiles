#!/usr/bin/zsh
#=======================================================================
#       ENV VARIABLES
#=======================================================================
export DOTFILES=$HOME/.dotfiles
export PROJECTS_DIR=$HOME/projects
export PERSONAL_PROJECTS_DIR=$PROJECTS_DIR/personal

# @see: https://github.com/BurntSushi/ripgrep/blob/master/GUIDE.md#configuration-file
if which rg >/dev/null; then
  export RIPGREP_CONFIG_PATH=$DOTFILES/.config/rg/.ripgreprc
fi

# Added by n-install (see http://git.io/n-install-repo).
if [ -d "$HOME/n" ]; then
  export N_PREFIX="$HOME/n"; [[ :$PATH: == *":$N_PREFIX/bin:"* ]] || PATH+=":$N_PREFIX/bin"
fi

if which yarn >/dev/null; then
  path+=("$(yarn global bin)")
fi

[ -f "$HOME/.cargo/env" ] && . "$HOME/.cargo/env"

path+=(
  "/usr/local/bin"
  "$HOME/.npm/bin"
  "$HOME/.local/bin"
  # Dart ============================================================
  "$HOME/flutter/.pub-cache/bin"
  "$HOME/.pub-cache/bin"
)

# GO ============================================================
if which go >/dev/null; then
  export GOPATH=$HOME/go
  path+=("$GOPATH/bin")
fi

case `uname` in
  Darwin)
    export ANDROID_SDK_ROOT=~/Library/Android/sdk/
    # Append to PATH
    path+=(
      "$HOME/flutter/bin"
    )

    # MacOS ships with an older version of Ruby which is built against an X86
    # system rather than ARM i.e. for M1+. So replace the system ruby with an
    # updated one from Homebrew and ensure it is before /usr/bin/ruby
    # Prepend to PATH
    path=(
      "$(brew --prefix)/opt/ruby/bin"
      "$(brew --prefix)/lib/ruby/gems/3.0.0/bin"
      $path
    )

    # Add LUA_PATH to the environment ensuring the lua version is set since
    # luarocks from homebrew uses lua 5.4 by default so would otherwise add the
    # wrong path
    if which luarocks >/dev/null; then
      eval "$(luarocks --lua-version=5.1 path)"
    fi
  ;;
  Linux)
  # JAVA ==========================================================
  # export JAVA_HOME=/usr/lib/jvm/java-1.11.0-openjdk-amd64
  # Use Java 8 because -> https://stackoverflow.com/a/49759126

  export JAVA_HOME=/usr/lib/jvm/java-8-openjdk-amd64
  path+=(
    "$JAVA_HOME/bin"
    # Add local build of neovim to path, remove this once stable nvim is released
    "$HOME/neovim/bin"
  )

  ;;
esac

if [ -d "$HOME/bin" ] ; then
  path+=("$HOME/bin")
fi

export MANPATH="/usr/local/man:$MANPATH"
if which nvim >/dev/null; then
  export MANPAGER='nvim +Man!'
fi

# you may need to manually set your language environment
export LC_ALL=en_GB.UTF-8
export LANG=en_GB.UTF-8

# preferred editor for local and remote sessions
if [ -n "$NVIM_LISTEN_ADDRESS" ]; then
    export VISUAL="nvr -cc split --remote-wait +'set bufhidden=wipe'"
    export EDITOR="nvr -cc split --remote-wait +'set bufhidden=wipe'"
else
    export VISUAL="nvim"
    export EDITOR="nvim"
fi

export USE_EDITOR=$EDITOR

if [ -f "$HOME/.environment.secret.sh" ]; then
  source $HOME/.environment.secret.sh
fi

if [ -f "$HOME/.environment.local.sh" ]; then
  source $HOME/.environment.local.sh
fi

# ssh
export SSH_KEY_PATH="~/.ssh/rsa_id"

export ZSH_AUTOSUGGEST_HIGHLIGHT_STYLE='fg=241'

if ! type "$bat" > /dev/null; then
  export BAT_THEME="TwoDark"
fi

# Setting ag as the default source for fzf

# --files: List files that would be searched but do not search
# --no-ignore: Do not respect .gitignore, etc...
# --hidden: Search hidden files and folders
# --follow: Follow symlinks
# --glob: Additional conditions for search (in this case ignore everything in the .git/ folder)
# Need to escape the "!" and "*" characters using /
# --no-ignore = this flag shows node modules etc
export FZF_DEFAULT_COMMAND='rg --files --no-ignore-vcs --hidden'
export FZF_DEFAULT_OPTS="--history=$HOME/.fzf_history"

# To apply to the command to CTRL-T as well
export FZF_CTRL_T_COMMAND="$FZF_DEFAULT_COMMAND"
# Don't open FZF in a separate split in tmux
export FZF_TMUX=0
